{"version":3,"file":"static/js/242.2d71a56a.chunk.js","mappings":"sLACA,EAA0B,yBAA1B,EAAmE,+BAAnE,EAA6G,0BCA7G,EAA8B,4B,mBCkB9B,EAVeA,EAAAA,MAAW,YAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,GAE9B,OADAC,QAAQC,IAAI,WACL,gBAAKC,UAAWC,EAAhB,UACH,UAAC,KAAD,CAASC,GAAE,mBAAcL,GAAzB,WACI,gBAAKM,IAAI,4FAA4FC,IAAI,QACxGR,U,UCbb,EAA0B,yBCe1B,EAReD,EAAAA,MAAW,YAAkC,IAAhCU,EAA+B,EAA/BA,KAA+B,EAA1BR,GAG7B,OADAC,QAAQC,IAAI,QACL,gBAAKC,UAAWC,EAAhB,SACFI,O,UCDIC,EAAWX,EAAAA,MAAW,YAAuD,IAArDY,EAAoD,EAApDA,kBAAmBC,EAAiC,EAAjCA,SAEpD,OADAV,QAAQC,IAAI,aAER,iBAAKC,UAAWC,EAAhB,UACKO,EAASC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAoBL,KAAMK,EAAEC,SAAdD,EAAEb,QACnC,SAACe,EAAA,EAAD,CAAaC,SAAU,SAACF,GAAD,OAAqBJ,EAAkBI,Y,UCL7DG,EAAoBnB,EAAAA,MAAW,YAAwC,IAAtCa,EAAqC,EAArCA,SAEpCO,GAAWC,EAAAA,EAAAA,KAEXT,GAAoBU,EAAAA,EAAAA,cAAY,SAACN,GACnCI,GAASG,EAAAA,EAAAA,GAAWP,MACrB,IAGH,OACI,gBAAKQ,MAAO,CAACC,MAAM,OAAnB,UACI,SAACd,EAAD,CACIE,SAAUA,EACVD,kBAAmBA,S,UCEnC,EAlBgB,WAEZ,OAA4Bc,EAAAA,EAAAA,IAAe,SAAAC,GAAK,OAAIA,EAAMC,kBAAnDC,EAAP,EAAOA,QAAShB,EAAhB,EAAgBA,SAGhB,OAFea,EAAAA,EAAAA,IAAe,SAAAC,GAAK,OAAIA,EAAMG,YAAYC,YAMlD,iBAAK1B,UAAWC,EAAhB,WACH,gBAAKD,UAAWC,EAAhB,SACKuB,EAAQf,KAAI,SAAAkB,GAAC,OAAI,SAAC,EAAD,CAAmB/B,KAAM+B,EAAE/B,KAAMC,GAAI8B,EAAE9B,IAA1B8B,EAAE9B,UAGrC,SAACiB,EAAD,CAAmBN,SAAUA,QARtB,SAAC,KAAD,CAAUN,GAAI","sources":["webpack://my-social-network/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://my-social-network/./src/components/Dialogs/Dialog/Dialog.module.css?19be","components/Dialogs/Dialog/Dialog.tsx","webpack://my-social-network/./src/components/Dialogs/Messages/Message.module.css?2e1f","components/Dialogs/Messages/Message.tsx","components/Dialogs/Messages/Messages.tsx","components/Dialogs/Messages/MessagesContainer.tsx","components/Dialogs/Dialogs.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__7gppW\",\"dialogs_items\":\"Dialogs_dialogs_items__QKEL8\",\"messages\":\"Dialogs_messages__irY83\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialog_item\":\"Dialog_dialog_item__n4+Pj\"};","import React from 'react'\r\nimport s from \"./Dialog.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype DialogPropsType = {\r\n    name: string\r\n    id: string\r\n}\r\n\r\nconst Dialog = React.memo(({name, id}: DialogPropsType) => {\r\n    console.log('dialog')\r\n    return <div className={s.dialog_item}>\r\n        <NavLink to={`/dialogs/${id}`}>\r\n            <img src=\"https://shapka-youtube.ru/wp-content/uploads/2021/02/avatarka-dlya-skaypa-dlya-parney.jpg\" alt=\"ava\"/>\r\n            {name}\r\n        </NavLink>\r\n    </div>\r\n}\r\n)\r\nexport default Dialog","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__JQfrb\"};","import React from 'react'\r\nimport s from \"./Message.module.css\";\r\n\r\ntype MessagePropsType = {\r\n    text: string\r\n    id?: string\r\n}\r\n\r\nconst Message= React.memo(({text,id}: MessagePropsType) => {\r\n\r\n    console.log('msg')\r\n    return <div className={s.message}>\r\n        {text}\r\n    </div>\r\n})\r\n\r\nexport default Message","import React, {ChangeEvent} from 'react';\r\nimport s from \"../Dialogs.module.css\";\r\nimport Message from \"./Message\";\r\nimport {MessagesType} from \"../../../redux/dialogsReducer\";\r\nimport {AddItemForm} from \"../../AddItemForm/AddItemForm\";\r\n\r\ntype MessagesPropsType = {\r\n    addMessageHandler: (message: string) => void\r\n    messages: Array<MessagesType>\r\n }\r\n\r\nexport const Messages = React.memo(({addMessageHandler, messages}: MessagesPropsType) => {\r\n    console.log('messages')\r\n    return (\r\n        <div className={s.messages}>\r\n            {messages.map(m => <Message key={m.id} text={m.message}/>)}\r\n            <AddItemForm callBack={(message: string) => addMessageHandler(message)}/>\r\n        </div>\r\n    );\r\n}\r\n)","import React, { useCallback} from 'react';\r\nimport {\r\n    addMessage, MessagesType,\r\n} from \"../../../redux/dialogsReducer\";\r\nimport {Messages} from \"./Messages\";\r\nimport {useAppDispatch} from \"../../../redux/hooks\";\r\n\r\ntype MessagesContainerType = {\r\n    messages: Array<MessagesType>,\r\n}\r\n\r\nexport const MessagesContainer = React.memo(({messages}: MessagesContainerType) => {\r\n\r\n    const dispatch = useAppDispatch()\r\n\r\n    const addMessageHandler = useCallback((message: string) => {\r\n        dispatch(addMessage(message))\r\n    }, [] )\r\n\r\n\r\n    return (\r\n        <div style={{width:\"45%\"}}>\r\n            <Messages\r\n                messages={messages}\r\n                addMessageHandler={addMessageHandler}\r\n            />\r\n\r\n        </div>\r\n    );\r\n})","import React from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport {MessagesContainer} from \"./Messages/MessagesContainer\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {useAppSelector} from \"../../redux/hooks\";\r\n\r\n\r\nconst Dialogs = () => {\r\n\r\n    const {dialogs, messages} = useAppSelector(state => state.dialogsReducer)\r\n    let isLogged = useAppSelector(state => state.AuthReducer.isLogin)\r\n\r\n    if(!isLogged) {\r\n        return <Navigate to={'/login'} />\r\n    }\r\n\r\n    return <div className={s.dialogs}>\r\n        <div className={s.dialogs_items}>\r\n            {dialogs.map(d => <Dialog key={d.id} name={d.name} id={d.id}/>)}\r\n        </div>\r\n\r\n        <MessagesContainer messages={messages}/>\r\n    </div>\r\n}\r\n\r\nexport default Dialogs"],"names":["React","name","id","console","log","className","s","to","src","alt","text","Messages","addMessageHandler","messages","map","m","message","AddItemForm","callBack","MessagesContainer","dispatch","useAppDispatch","useCallback","addMessage","style","width","useAppSelector","state","dialogsReducer","dialogs","AuthReducer","isLogin","d"],"sourceRoot":""}