{"version":3,"file":"static/js/379.5ad285a5.chunk.js","mappings":"sLACA,EAA0B,yB,wCCA1B,GAAgB,KAAO,qBAAqB,IAAM,oBAAoB,KAAO,qBAAqB,OAAS,wB,mBCkB9FA,EAASC,EAAAA,MAAW,SAACC,GAC9B,IACIC,EAOAD,EAPAC,GACAC,EAMAF,EANAE,KACAC,EAKAH,EALAG,OACAC,EAIAJ,EAJAI,SACAC,EAGAL,EAHAK,cACAC,EAEAN,EAFAM,OACAC,EACAP,EADAO,gBAIJ,OACI,iBAAKC,UAAWC,EAAAA,KAAhB,WACI,iBAAKD,UAAWC,EAAAA,IAAhB,WACI,SAAC,KAAD,CAASC,GAAE,WAAMT,GAAjB,UACI,gBACIU,IAAKL,EAAOM,MAAQN,EAAOM,MAAQ,0GAGvCR,GACI,mBACIS,QAAS,kBAAMR,EAAcJ,GAAI,IACjCa,SAAUP,EAAgBQ,MAAK,SAAAC,GAAC,OAAIA,IAAMf,KAF9C,uBAGA,mBACIY,QAAS,kBAAMR,EAAcJ,GAAI,IACjCa,SAAUP,EAAgBQ,MAAK,SAAAC,GAAC,OAAIA,IAAMf,KAF9C,wBAKZ,iBAAKO,UAAWC,EAAAA,KAAhB,WACI,gBAAKD,UAAWC,EAAAA,KAAhB,SAAyBP,KACzB,gBAAKM,UAAWC,EAAAA,OAAhB,SAA2BN,GAAkB,uB,8BCiB7D,EAxDgB,WACZ,IAAIc,GAAUC,EAAAA,EAAAA,IAAe,SAAAC,GAAK,OAAIA,EAAMC,YAAYH,WACpDI,GAAUH,EAAAA,EAAAA,IAAe,SAAAC,GAAK,OAAIA,EAAMG,eAAeD,WACvDE,GAAaL,EAAAA,EAAAA,IAAe,SAAAC,GAAK,OAAIA,EAAMK,WAAWrB,UACtDI,GAAkBW,EAAAA,EAAAA,IAAe,SAAAC,GAAK,OAAIA,EAAMM,aAAalB,mBACjE,GAIIW,EAAAA,EAAAA,IAAe,SAAAC,GAAK,OAAIA,EAAMG,kBAH9BI,EADJ,EACIA,SACAC,EAFJ,EAEIA,YACAC,EAHJ,EAGIA,WAGAC,GAAWC,EAAAA,EAAAA,MAEfC,EAAAA,EAAAA,YAAU,WACNF,GAASG,EAAAA,EAAAA,IAAaL,EAAaD,GAAU,MAC9C,CAACC,IAGJ,IAAMtB,GAAgB4B,EAAAA,EAAAA,cAAY,SAAChC,EAAYG,GAEvCyB,EADJzB,GACa8B,EAAAA,EAAAA,IAAajC,EAAIG,IAEjB+B,EAAAA,EAAAA,IAAelC,MAC7B,IAKCmC,EAAaC,KAAKC,KAAKV,EAAaF,GAExC,OAAKT,GAGE,iBAAKT,UAAWC,EAAhB,UACa,YAAfc,IAA4B,SAACgB,EAAA,EAAD,KAE7B,gBAAK/B,UAAWgC,EAAAA,EAAAA,WAAhB,UACI,SAACC,EAAA,EAAD,CAAiBC,aAbJ,SAACC,EAAmCC,GACrDf,GAASgB,EAAAA,EAAAA,IAAqBD,KAYmBR,WAAYA,MAE5Df,EAAQyB,KAAI,SAAAC,GACT,OACI,SAACjD,EAAD,CACIG,GAAI8C,EAAE9C,GACNC,KAAM6C,EAAE7C,KACRC,OAAQ4C,EAAE5C,OACVC,SAAU2C,EAAE3C,SACZE,OAAQyC,EAAEzC,OACVD,cAAeA,EACfE,gBAAiBA,WAjBtB,SAAC,KAAD,CAAUG,GAAI,a,wGChCd,SAAS+B,EAAT,GAA2E,IAAjDC,EAAgD,EAAhDA,aAAcN,EAAkC,EAAlCA,WAC7CY,GAAO9B,EAAAA,EAAAA,IAAe,SAAAC,GAAK,OAAIA,EAAMG,eAAeK,eAE1D,OACI,SAAC,IAAD,CAAOsB,QAAS,EAAhB,UACI,SAAC,IAAD,CAAYC,MAAOd,EAAYe,SAAUT,EAAeM,KAAMA,Q,mBCd1E,KAAgB,WAAa,0BAA0B,QAAU,uBAAuB,KAAO,oBAAoB,WAAa","sources":["components/Friends/Friends.module.css","webpack://my-social-network/./src/components/Friends/Friend/Friend.module.css?43fb","components/Friends/Friend/Friend.tsx","components/Friends/Friends.tsx","components/Pagination/BasicPagination.tsx","webpack://my-social-network/./src/components/Users/Users.module.css?b9d0"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"friends\":\"Friends_friends__Pd+Zw\"};","// extracted by mini-css-extract-plugin\nexport default {\"user\":\"Friend_user__+K6KK\",\"img\":\"Friend_img__2+7TY\",\"info\":\"Friend_info__Mivg+\",\"status\":\"Friend_status__Pq1vS\"};","import React from 'react';\r\nimport s from './Friend.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\n\r\ntype UserPropsType = {\r\n    id: number,\r\n    name: string,\r\n    status: string,\r\n    followed: boolean\r\n    photos: {\r\n        small: null,\r\n        large: null,\r\n    }\r\n    followHandler: (id: number, followed: boolean) => void,\r\n    toggleFollowing: number[]\r\n}\r\n\r\nexport const Friend = React.memo((props: UserPropsType) => {\r\n    const {\r\n        id,\r\n        name,\r\n        status,\r\n        followed,\r\n        followHandler,\r\n        photos,\r\n        toggleFollowing\r\n    } = props\r\n\r\n\r\n    return (\r\n        <div className={s.user}>\r\n            <div className={s.img}>\r\n                <NavLink to={`/${id}`}>\r\n                    <img\r\n                        src={photos.small ? photos.small : \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQrW-Jw-ZMy8KVpsK728K3CAEogswHduRgqog&usqp=CAU\"}/>\r\n                </NavLink>\r\n                {\r\n                    followed  ?\r\n                        <button\r\n                            onClick={() => followHandler(id, false)}\r\n                            disabled={toggleFollowing.some(i => i === id)}>Unfollow</button> :\r\n                        <button\r\n                            onClick={() => followHandler(id, true)}\r\n                            disabled={toggleFollowing.some(i => i === id)}>Follow</button>\r\n                }\r\n            </div>\r\n            <div className={s.info}>\r\n                <div className={s.name}>{name}</div>\r\n                <div className={s.status}>{status ? status : 'status...'}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n","import React, {useCallback, useEffect} from \"react\";\r\nimport s from './Friends.module.css'\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {useAppDispatch, useAppSelector} from \"../../redux/hooks\";\r\nimport {deleteFriendTC, setCurrentFriendPage, setFriendsTC} from \"../../redux/friendsReducer\";\r\nimport {Preloader} from \"../Preloader/circle/Preloader\";\r\nimport {Friend} from \"./Friend/Friend\";\r\nimport {deleteUserTC, followUserTC, setCurrentPage} from \"../../redux/UsersReducer\";\r\nimport style from '../Users/Users.module.css'\r\nimport BasicPagination from \"../Pagination/BasicPagination\";\r\n\r\nconst Friends = () => {\r\n    let isLogin = useAppSelector(state => state.AuthReducer.isLogin)\r\n    let friends = useAppSelector(state => state.friendsReducer.friends)\r\n    let statusLoad = useAppSelector(state => state.AppReducer.status)\r\n    let toggleFollowing = useAppSelector(state => state.UsersReducer.toggleFollowing)\r\n    const {\r\n        pageSize,\r\n        currentPage,\r\n        totalCount\r\n    } = useAppSelector(state => state.friendsReducer)\r\n\r\n    let dispatch = useAppDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(setFriendsTC(currentPage, pageSize, true))\r\n    }, [currentPage])\r\n\r\n\r\n    const followHandler = useCallback((id: number, followed: boolean) => {\r\n        followed ?\r\n            dispatch(followUserTC(id, followed))\r\n            :\r\n            dispatch(deleteFriendTC(id))\r\n    }, [])\r\n    const handleChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n        dispatch(setCurrentFriendPage(value))\r\n    };\r\n\r\n    let pagesCount = Math.ceil(totalCount / pageSize)\r\n\r\n    if (!isLogin) {\r\n        return <Navigate to={'/login'}/>\r\n    }\r\n    return <div className={s.friends}>\r\n        {statusLoad === 'loading' && <Preloader/> /*loading*/}\r\n\r\n        <div className={style.pagination}>\r\n            <BasicPagination handleChange={handleChange} pagesCount={pagesCount}/>\r\n        </div>\r\n        {friends.map(f => {\r\n            return (\r\n                <Friend\r\n                    id={f.id}\r\n                    name={f.name}\r\n                    status={f.status}\r\n                    followed={f.followed}\r\n                    photos={f.photos}\r\n                    followHandler={followHandler}\r\n                    toggleFollowing={toggleFollowing}\r\n                />\r\n            )\r\n        })}\r\n\r\n    </div>\r\n}\r\n\r\nexport default Friends","import * as React from 'react';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport Stack from '@mui/material/Stack';\r\nimport {useAppSelector} from \"../../redux/hooks\";\r\n\r\nexport type BasicPaginationType = {\r\n    handleChange: (event: React.ChangeEvent<unknown>, value: number) => void\r\n    pagesCount: number\r\n}\r\n\r\nexport default function BasicPagination({handleChange, pagesCount}: BasicPaginationType) {\r\n    const page = useAppSelector(state => state.friendsReducer.currentPage)\r\n\r\n    return (\r\n        <Stack spacing={2}>\r\n            <Pagination count={pagesCount} onChange={handleChange}  page={page} />\r\n        </Stack>\r\n    );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"activePage\":\"Users_activePage__hH2Kt\",\"loading\":\"Users_loading__l+KJW\",\"spin\":\"Users_spin__m9eez\",\"pagination\":\"Users_pagination__jzioQ\"};"],"names":["Friend","React","props","id","name","status","followed","followHandler","photos","toggleFollowing","className","s","to","src","small","onClick","disabled","some","i","isLogin","useAppSelector","state","AuthReducer","friends","friendsReducer","statusLoad","AppReducer","UsersReducer","pageSize","currentPage","totalCount","dispatch","useAppDispatch","useEffect","setFriendsTC","useCallback","followUserTC","deleteFriendTC","pagesCount","Math","ceil","Preloader","style","BasicPagination","handleChange","event","value","setCurrentFriendPage","map","f","page","spacing","count","onChange"],"sourceRoot":""}